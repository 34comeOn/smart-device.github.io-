/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

// const mainWrapperElement = document.querySelector('.wrapper');
// const navToggleElement = document.querySelector('.header__toggle');
// const headerMenuElement = document.querySelector('.navigation__list--header');
// const nameInputElement = document.querySelector('.name-input');
// const phoneInputElement = document.querySelector('.phone-input');
// const emailInputElement = document.querySelector('.email-input');
// const formSubmitElement = document.querySelector('.booking__button');
// const checkboxElement = document.querySelector('.booking__checkbox');
// const labelElement = document.querySelector('.booking__label');
// mainWrapperElement.classList.remove('wrapper--nojs');
// const closeMenu = () => {
//   document.body.classList.remove('menu-opened');
//   mainWrapperElement.classList.add('wrapper--menu-closed');
//   mainWrapperElement.classList.remove('wrapper--menu-opened');
// };
// navToggleElement.addEventListener('click', function () {
//   if (mainWrapperElement.classList.contains('wrapper--menu-closed')) {
//     mainWrapperElement.classList.remove('wrapper--menu-closed');
//     mainWrapperElement.classList.add('wrapper--menu-opened');
//     document.body.classList.add('menu-opened');
//   } else {
//     mainWrapperElement.classList.add('wrapper--menu-closed');
//     mainWrapperElement.classList.remove('wrapper--menu-opened');
//     document.body.classList.remove('menu-opened');
//   }
// });
// headerMenuElement.addEventListener('click', function (evt) {
//   if (evt.target.nodeName === 'A' && mainWrapperElement.classList.contains('wrapper--menu-opened')) {
//     closeMenu();
//   }
// });
// document.addEventListener('click', function (evt) {
//   if (!evt.target.closest('.header__container') && mainWrapperElement.classList.contains('wrapper--menu-opened')) {
//     closeMenu();
//   }
// });
// const nameInputRe = /[A-Za-zA-Яа-яЁё0-9\s]$/;
// const phoneInputRe = /[0-9]$/;
// const emailInputRe = /\S+@\S+\.\S+/;
// const validateInput = (element, re, text) => {
//   element.addEventListener('input', () => {
//     const nameInputArray = element.value.split(' ');
//     if (element.value.endsWith(' ')) {
//       nameInputArray.pop();
//     }
//     const booleanNameInputArray = nameInputArray.map((nameValidity) =>
//       re.test(nameValidity)
//     );
//     nameInputArray.forEach((word) => {
//       if (!re.test(word) || booleanNameInputArray.includes(false)) {
//         element.setCustomValidity(text);
//       } else {
//         element.setCustomValidity('');
//       }
//       element.reportValidity();
//     });
//   });
// };
// const onLabelClick = () => {
//   if (!checkboxElement.classList.contains('booking__label--checked')) {
//     checkboxElement.classList.add('booking__label--checked');
//     formSubmitElement.setAttribute('disabled', 'disabled');
//   } else {
//     checkboxElement.classList.remove('booking__label--checked');
//     formSubmitElement.removeAttribute('disabled');
//   }
// };
// labelElement.addEventListener('click', function () {
//   onLabelClick();
// });
// validateInput(nameInputElement, nameInputRe, 'Здесь могут быть только буквы и цифры');
// validateInput(phoneInputElement, phoneInputRe, 'Здесь могут быть только цифры');
// validateInput(emailInputElement, emailInputRe, 'Впишите пожалуйста электронный адрес корректно');
// const isEnterKey = (evt) => (
//   evt.key === 'Enter'
// );
// const pushLabel = () => {
//   onLabelClick();
// };
// const onLabelEnterKeydown = (evtClose) => {
//   if (isEnterKey(evtClose)) {
//     pushLabel();
//   }
// };
// labelElement.addEventListener('keydown', onLabelEnterKeydown);

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map